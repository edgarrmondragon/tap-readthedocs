[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==1.6",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-readthedocs"
version = "0.0.0"
description = "`tap-readthedocs` is a Singer tap for ReadTheDocs, built with the Meltano SDK for Singer Taps."
authors = ["Edgar Ramírez-Mondragón <edgarrm358@gmail.com>"]
keywords = [
    "ELT",
    "ReadTheDocs",
    "singer.io",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-readthedocs"
repository = "https://github.com/edgarrmondragon/tap-readthedocs"
documentation = "https://github.com/edgarrmondragon/tap-readthedocs#readme"

[tool.poetry.dependencies]
importlib-resources = "<7"  # TODO: Remove after Pendulum is released with https://github.com/sdispater/pendulum/issues/759
pendulum = [
  { version = ">=2", python = "<3.12" },
  { version = ">=3.0.0b1", python = ">=3.12", allow-prereleases = true },
]
python = ">=3.8,<4"
singer-sdk = "~=0.34.0"
toolz = "~=0.12.0"
requests-cache = "~=1.0"

[tool.poetry.dev-dependencies]
singer-sdk = { version = "*", extras = ["testing"] }

[tool.poetry.scripts]
# CLI declaration
tap-readthedocs = 'tap_readthedocs.tap:TapReadTheDocs.cli'

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
ignore = [
  "ANN101",  # missing-type-self
  "DJ",      # flake8-django
  "FIX002",  # line-contains-todo
  "COM812",  # missing-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]
unfixable = [
  "ERA001",  # commented-out-code
]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = [
  "ANN201",  # missing-return-type-public-function
  "S101",    # assert
  "SLF001",  # private-member-access
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_readthedocs"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = 3.9
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["backoff.*", "toolz.*"]
ignore_missing_imports = true
